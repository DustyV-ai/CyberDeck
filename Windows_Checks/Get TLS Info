# Function to check if a specific TLS version is enabled
function Get-TLSStatus {
    param (
        [string]$ProtocolName,
        [string]$ClientKeyPath,
        [string]$ServerKeyPath,
        [bool]$DefaultEnabled
    )

    $clientKey = Get-ItemProperty -Path $ClientKeyPath -Name "Enabled" -ErrorAction SilentlyContinue
    $serverKey = Get-ItemProperty -Path $ServerKeyPath -Name "Enabled" -ErrorAction SilentlyContinue

    $clientEnabled = if ($null -ne $clientKey) { $clientKey.Enabled -eq 1 } else { $DefaultEnabled }
    $serverEnabled = if ($null -ne $serverKey) { $serverKey.Enabled -eq 1 } else { $DefaultEnabled }

    return @{
        Protocol = $ProtocolName
        ClientEnabled = $clientEnabled
        ServerEnabled = $serverEnabled
        ExplicitlySet = ($null -ne $clientKey) -or ($null -ne $serverKey)
    }
}

# Function to get Windows version
function Get-WindowsVersion {
    $osInfo = Get-WmiObject -Class Win32_OperatingSystem
    return [Version]$osInfo.Version
}

# Get Windows version
$windowsVersion = Get-WindowsVersion

# Registry paths
$baseKey = "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols"

# Determine default enabled status based on Windows version
$tls10Default = $windowsVersion -lt [Version]"10.0"
$tls11Default = $windowsVersion -lt [Version]"10.0"
$tls12Default = $true
$tls13Default = $windowsVersion -ge [Version]"10.0.20348" # Windows Server 2022 or Windows 11

# Get TLS status for different versions
$tls10Status = Get-TLSStatus -ProtocolName "TLS 1.0" `
    -ClientKeyPath "$baseKey\TLS 1.0\Client" `
    -ServerKeyPath "$baseKey\TLS 1.0\Server" `
    -DefaultEnabled $tls10Default

$tls11Status = Get-TLSStatus -ProtocolName "TLS 1.1" `
    -ClientKeyPath "$baseKey\TLS 1.1\Client" `
    -ServerKeyPath "$baseKey\TLS 1.1\Server" `
    -DefaultEnabled $tls11Default

$tls12Status = Get-TLSStatus -ProtocolName "TLS 1.2" `
    -ClientKeyPath "$baseKey\TLS 1.2\Client" `
    -ServerKeyPath "$baseKey\TLS 1.2\Server" `
    -DefaultEnabled $tls12Default

$tls13Status = Get-TLSStatus -ProtocolName "TLS 1.3" `
    -ClientKeyPath "$baseKey\TLS 1.3\Client" `
    -ServerKeyPath "$baseKey\TLS 1.3\Server" `
    -DefaultEnabled $tls13Default

# Store TLS status in variables
$tlsStatus = @(
    $tls10Status,
    $tls11Status,
    $tls12Status,
    $tls13Status
)

# Output the results
Write-Host "Windows Version: $windowsVersion"
Write-Host ""

foreach ($status in $tlsStatus) {
    Write-Host "Protocol: $($status.Protocol)"
    Write-Host "  Client Enabled: $($status.ClientEnabled)"
    Write-Host "  Server Enabled: $($status.ServerEnabled)"
    if ($status.ExplicitlySet) {
        Write-Host "  Status: Explicitly set in registry"
    } else {
        Write-Host "  Status: Using default Windows setting"
    }
    Write-Host ""
}
